import java.util.* ;
import java.io.*; 
public class QuickSort {
    public static List<Integer> quickSort(List<Integer> arr){
        if(arr.size() == 0) return arr;
        quickSort(arr, 0, arr.size() - 1);
        return arr;
    }
    static void quickSort(List<Integer>arr, int low, int right){
        if(low < right){
            int mid = partition(arr, low, right);
            quickSort(arr, low, mid-1);
            quickSort(arr, mid+1, right);
        }
    }
    static int partition(List<Integer>arr, int low, int right){
        int pivot = arr.get(low);
        int i = low+1;
        int j = right;
        while(i <= j){
            while(i <= j && arr.get(i) <= pivot)i++;
            while(i <= j && arr.get(j) > pivot)j--;
            if(i < j){
                swap(arr, i, j);
            }
        }
        swap(arr, low, j);
        return j;
    }
    private static void swap(List<Integer>arr, int i, int j){
        int temp = arr.get(i);
        arr.set(i, arr.get(j));
        arr.set(j, temp);
    }
}
